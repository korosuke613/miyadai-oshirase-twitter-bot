name: CI

on:
  push:

permissions:
  contents: read

env:
  INSTALL_DENO_VERSION: v1.x

jobs:
  deno-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup DENO_DIR
        run: |
          echo "DENO_DIR=${{ runner.temp }}/my_cache_directory" >> $GITHUB_ENV

      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-${{ env.INSTALL_DENO_VERSION }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: ${{ env.INSTALL_DENO_VERSION }}

      - name: Run fmt
        run: |
          deno fmt --check

      - name: Run lint
        run: |
          deno lint

      - name: Check mod.ts
        run: |
          deno check main.ts

  deno-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup DENO_DIR
        run: |
          echo "DENO_DIR=${{ runner.temp }}/my_cache_directory" >> $GITHUB_ENV

      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: ${{ env.INSTALL_DENO_VERSION }}

      - name: Install browser
        run: |
          deno task install

      - name: Cache dependencies
        run: |
          deno cache --lock deno.lock dev_deps.ts deps.ts

      - name: Run tests
        run: |
          deno task test:coverage > test_results.txt

      - name: Generate coverage file
        run: |
          deno coverage cov_profile --lcov --output=cov_profile.lcov

      - name: Display test results
        if: always()
        run: |
          cat test_results.txt
          echo "## Test result" >> $GITHUB_STEP_SUMMARY
          deno run --allow-read npm:ansi-to-html test_results.txt >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./cov_profile.lcov
          flags: unittests
